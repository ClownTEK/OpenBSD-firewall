#	$OpenBSD: pf.conf,v 1.31 2006/01/30 12:20:31 camield Exp $
#
# See pf.conf(5) and /usr/share/pf for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.

############################################################################

# interfaces
DMZ_if  = re0
internal_if  = re1
wlan_if  = re2
wlan_guest_if = vlan1
wlan_restricted_if = vlan2

# allowed to connect to the firewall
fw_allowed = "{ ssh }"

# services servers
SMTP_srv  = smtp.eurospider.ch
IMAPS_srv = mailbox.eurospider.ch
POP3S_srv = mailbox.eurospider.ch
SVN_srv = zaurak-svn.eurospider.ch
INTRANET_srv = zaurak.eurospider.ch
JUMPSTATION_srv = fozzie.eurospider.ch

CyberlinkDNS = "{ 62.12.130.66, 193.246.253.10, 213.144.148.44, 62.12.130.69, 62.12.130.28, 193.246.253.194, 213.144.148.42 }"
EIT_DNS = "{ 192.168.0.11, 192.168.0.10 }"
EXTERNAL_DNS_clients = "{ 192.168.100.0/24, 195.226.5.128/29, 195.226.5.192/27 }"
REVERSE_PROXY = 195.226.5.131

PROJECT_IMAGES = "{ 192.168.0.50, 192.168.0.136, 192.168.0.222, 192.168.0.221 }"

# allowed icmp types: ping
icmp_allowed="echoreq"

############################################################################
# Options

#set block-policy return

# log traffic on this interface
set loginterface $DMZ_if

# disable all filtering on loopback
set skip on lo

# normalize the packets so there are no ambiguities
match in all scrub (no-df)

############################################################################
# NAT and redirections
# no NAT or redirections on this box


############################################################################
# Filtering rules 

# block all IPv6
block quick inet6

# by default block everything
block in

# we filter only incoming traffic into an interface
pass out keep state

# antispoofing
antispoof quick for { lo $internal_if $wlan_if $wlan_guest_if $wlan_restricted_if }

# allowed to connect to the firewall
pass in on $DMZ_if inet proto tcp from any to ($DMZ_if) port $fw_allowed flags S/SA keep state
pass in on $internal_if inet proto tcp from any to ($internal_if) port $fw_allowed flags S/SA keep state

# directly forwarded services
pass in on $DMZ_if inet proto tcp from any to $SMTP_srv port smtp flags S/SA keep state
pass in on $DMZ_if inet proto tcp from any to $SMTP_srv port submission flags S/SA keep state
pass in on $DMZ_if inet proto tcp from any to $IMAPS_srv port imaps flags S/SA keep state
pass in on $DMZ_if inet proto tcp from any to $POP3S_srv port pop3s flags S/SA keep state
pass in on $DMZ_if inet proto tcp from any to $JUMPSTATION_srv port ssh flags S/SA keep state

# reverse proxy: forwarded web services via proxy
pass in on $DMZ_if inet proto tcp from $REVERSE_PROXY to $SVN_srv port https flags S/SA keep state
pass in on $DMZ_if inet proto tcp from $REVERSE_PROXY to $INTRANET_srv port https flags S/SA keep state

# reverse proxy: allow access to project images on oz
pass in on $DMZ_if inet proto tcp from $REVERSE_PROXY to $PROJECT_IMAGES port http flags S/SA keep state
pass in on $DMZ_if inet proto tcp from $REVERSE_PROXY to $PROJECT_IMAGES port https flags S/SA keep state

# DNS allowed from Cyberlink servers and our machines
pass in on $DMZ_if inet proto tcp from $CyberlinkDNS to $EIT_DNS port domain flags S/SA keep state
pass in on $DMZ_if inet proto udp from $CyberlinkDNS to $EIT_DNS port domain keep state

pass in on $DMZ_if inet proto tcp from $EXTERNAL_DNS_clients to $EIT_DNS port domain flags S/SA keep state
pass in on $DMZ_if inet proto udp from $EXTERNAL_DNS_clients to $EIT_DNS port domain keep state

# allowed icmp
pass in inet proto icmp all icmp-type $icmp_allowed keep state

# Allow wlan everywhere but the internal network
block quick on $wlan_if to $internal_if
block quick on $wlan_guest_if to $internal_if
block quick on $wlan_restricted_if to $internal_if
pass quick on $wlan_if
pass quick on $wlan_guest_if
pass quick on $wlan_restricted_if

# Allow internal network everything
pass quick on $internal_if


#	$OpenBSD: pf.conf,v 1.31 2006/01/30 12:20:31 camield Exp $
#
# See pf.conf(5) and /usr/share/pf for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.

############################################################################
# Definitions

table <nonroutable> const { 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, \
			10.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, \
			0.0.0.0/8, 240.0.0.0/4 }

table <intNetworks> const { 192.168.0.0/24, 192.168.10.0/24, 192.168.20.0/24, \
			192.168.30.0/24, 192.168.100.0/24 }

table <bruteforce>

# interfaces
SDSL_if = re0
ext_if  = re1
DMZ_if  = re2

# allowed to connect to the firewall
fw_allowed = "{ ssh }"

# external gateway to servers
srv_gate = 195.226.5.130

# services servers
smtp_srv  = smtp.eurospider.ch
imaps_srv = mailbox.eurospider.ch
pop3s_srv = mailbox.eurospider.ch
SVN_srv = zaurak-svn.eurospider.ch
INTRANET_srv = zaurak.eurospider.ch
RevProxy_srv = charon.eurospider.ch
JUMPSTATION_srv = fozzie.eurospider.ch

# external servers services
lxh01_services = "{ ssh, http, https }"
lxh02_services = "{ ssh, http, https }"
lxh03_services = "{ ssh, http, https, 8443 }"
lxh04_services = "{ ssh, http, https }"

lxh01 = 195.226.5.131
lxh02 = 195.226.5.132
lxh03 = 195.226.5.133
lxh04 = 195.226.5.134

PROJECT_PROXY = lxh01
PROJECT_IMAGES = "{ 192.168.0.50, 192.168.0.136, 192.168.0.222, 192.168.0.221 }"

CyberlinkDNS = "{ 62.12.130.66, 193.246.253.10, 213.144.148.44, 62.12.130.69, 195.226.5.192/27, 62.12.130.28, 193.246.253.194, 213.144.148.42 }"
EIT_DNS = 192.168.0.11

# allowed icmp types: ping
icmp_allowed="echoreq"

############################################################################
# Options

# set block-policy return

# log traffic on this interface
set loginterface $SDSL_if

# disable all filtering on loopback
set skip on lo

# normalize the packets so there are no ambiguities
match in all scrub (no-df)


############################################################################
# NAT and redirections

# NAT requests from internal networks
match out on $SDSL_if from <intNetworks> nat-to $SDSL_if

# Services redirections
match in on $SDSL_if proto tcp from any to $SDSL_if port smtp rdr-to $smtp_srv
match in on $SDSL_if proto tcp from any to $SDSL_if port submission rdr-to $smtp_srv
match in on $SDSL_if proto tcp from any to $SDSL_if port imaps rdr-to $imaps_srv
match in on $SDSL_if proto tcp from any to $SDSL_if port pop3s rdr-to $pop3s_srv
match in on $SDSL_if proto tcp from any to $SDSL_if port 9417 rdr-to $JUMPSTATION_srv port ssh

# Cyberlink DNS mirror
match in on $SDSL_if proto tcp from $CyberlinkDNS to $SDSL_if port domain rdr-to $EIT_DNS
match in on $SDSL_if proto udp from $CyberlinkDNS to $SDSL_if port domain rdr-to $EIT_DNS


############################################################################
# Filtering rules 

# block all IPv6
block quick inet6

# by default block everything
block in

# we filter only incoming traffic into an interface
pass out keep state

# pass reverse proxy traffic before nonroutable traffic is blocked
pass in quick on $SDSL_if inet proto tcp from $RevProxy_srv to $SVN_srv port https flags S/SA synproxy state
pass in quick on $SDSL_if inet proto tcp from $RevProxy_srv to $INTRANET_srv port https flags S/SA synproxy state

# pass reverse proxy traffic before nonroutable traffic is blocked
pass in quick on $SDSL_if inet proto tcp from $PROJECT_PROXY to $PROJECT_IMAGES port http flags S/SA synproxy state
pass in quick on $SDSL_if inet proto tcp from $PROJECT_PROXY to $PROJECT_IMAGES port https flags S/SA synproxy state

# allow rerouted services to get to their servers
pass in quick on $SDSL_if inet proto tcp from any to $smtp_srv port smtp flags S/SA synproxy state
pass in quick on $SDSL_if inet proto tcp from any to $smtp_srv port submission flags S/SA synproxy state
pass in quick on $SDSL_if inet proto tcp from any to $imaps_srv port imaps flags S/SA synproxy state
pass in quick on $SDSL_if inet proto tcp from any to $pop3s_srv port pop3s flags S/SA synproxy state
pass in quick on $SDSL_if inet proto tcp from any to $JUMPSTATION_srv port ssh flags S/SA synproxy state

# Cyberlink DNS mirrors
pass in quick on $SDSL_if inet proto tcp from $CyberlinkDNS to $EIT_DNS port domain flags S/SA synproxy state
pass in quick on $SDSL_if inet proto udp from $CyberlinkDNS to $EIT_DNS port domain synproxy state

# nonroutable addresses are forbidden on the SDSL link
block drop in quick on $SDSL_if from <nonroutable> to any
block drop in quick on $SDSL_if from any to <nonroutable>
block drop out quick on $SDSL_if from any to <nonroutable>
block drop out quick on $SDSL_if from <nonroutable> to any

# my internal networks are linked only to the DMZ interface
block drop in log quick on !$DMZ_if from <intNetworks> to any
block drop in log quick on $DMZ_if from !<intNetworks> to any
block drop out log quick on !$DMZ_if from any to <intNetworks>
block drop out log quick on $DMZ_if from any to !<intNetworks>

# antispoofing
antispoof quick for lo

# allowed to connect to the firewall
block quick from <bruteforce>
pass in on $SDSL_if inet proto tcp from any to ($SDSL_if) port $fw_allowed flags S/SA keep state \
	(max-src-conn 5, max-src-conn-rate 10/60, overload <bruteforce> flush global)
pass in on $DMZ_if inet proto tcp from any to ($DMZ_if) port $fw_allowed flags S/SA keep state
pass in on $ext_if inet proto tcp from any to ($ext_if) port $fw_allowed flags S/SA keep state

# bridge filtering
pass in on $SDSL_if inet proto tcp from any to $lxh01 port $lxh01_services flags S/SA synproxy state
pass in on $SDSL_if inet proto tcp from any to $lxh02 port $lxh02_services flags S/SA synproxy state
pass in on $SDSL_if inet proto tcp from any to $lxh03 port $lxh03_services flags S/SA synproxy state
pass in on $SDSL_if inet proto tcp from any to $lxh04 port $lxh04_services flags S/SA synproxy state

# allowed icmp
pass in inet proto icmp all icmp-type $icmp_allowed keep state

# from the protected DMZ everything is allowed
pass quick on $DMZ_if

# from the external network to outside everything is allowed
pass in quick on $ext_if
pass in on $SDSL_if inet from $lxh01 to any
pass in on $SDSL_if inet from $lxh02 to any
pass in on $SDSL_if inet from $lxh03 to any
pass in on $SDSL_if inet from $lxh04 to any

